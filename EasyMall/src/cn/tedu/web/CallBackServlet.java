package cn.tedu.web;

import java.io.IOException;
import java.util.ResourceBundle;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import cn.com.tarena.utils.PaymentUtil;
import cn.tedu.factory.BasicFactory;
import cn.tedu.service.OrderService;
import cn.tedu.utils.PropUtils;

public class CallBackServlet extends HttpServlet {

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// 1.接收参数  ,获得回调所有数据
		String p1_MerId = request.getParameter("p1_MerId");
		String r0_Cmd = request.getParameter("r0_Cmd");
		String r1_Code = request.getParameter("r1_Code");
		String r2_TrxId = request.getParameter("r2_TrxId");
		String r3_Amt = request.getParameter("r3_Amt");
		String r4_Cur = request.getParameter("r4_Cur");
		String r5_Pid = request.getParameter("r5_Pid");
		String r6_Order = request.getParameter("r6_Order");
		String r7_Uid = request.getParameter("r7_Uid");
		String r8_MP = request.getParameter("r8_MP");
		//1表示重定向,2表示点对点通讯
		String r9_BType = request.getParameter("r9_BType");
		String rb_BankId = request.getParameter("rb_BankId");
		String ro_BankOrderId = request.getParameter("ro_BankOrderId");
		String rp_PayDate = request.getParameter("rp_PayDate");
		String rq_CardNo = request.getParameter("rq_CardNo");
		String ru_Trxtime = request.getParameter("ru_Trxtime");
		// 身份校验 --- 判断是不是支付公司通知你
		String hmac = request.getParameter("hmac");
		// 2.校验数据是否被修改,true:表示未被修改   false:被修改
		//自己对上面数据进行加密 --- 比较支付公司发过来hamc
		boolean isNoUpdate = PaymentUtil.verifyCallback(hmac, p1_MerId, r0_Cmd,
				r1_Code, r2_TrxId, r3_Amt, r4_Cur, r5_Pid, r6_Order, r7_Uid,
				r8_MP, r9_BType, PropUtils.getProperty("keyValue"));
		//3.未修改的话
		if (isNoUpdate) {//未被修改
			//判断重定向过来,还是点对点通讯过来的
			// 响应数据有效
			if (r9_BType.equals("1")) {//重定向
				// 测试时使用...
				// 修改订单的支付状态
				OrderService orderService = BasicFactory.getFactory().getInstance(OrderService.class);
				//查询当前订单信息  
				orderService.changeOrder(r6_Order);
				response.setContentType("text/html;charset=utf-8");
				response.getWriter().println("<h1>付款成功！等待商城进一步操作！等待收货...</h1>");
			} else if (r9_BType.equals("2")&& "1".equals(r1_Code)) {
				// 服务器点对点 --- 支付公司通知你
				System.out.println("付款成功！");
				// 修改订单状态 为已付款
				OrderService orderService = BasicFactory.getFactory().getInstance(OrderService.class);
				//查询当前的订单信息
				orderService.changeOrder(r6_Order);
				// 回复支付公司
				response.getWriter().print("success");
			}
		} else {//4.被串改了
			// 数据无效
			System.out.println("数据被篡改！");
			//将来可以转发到数据被串改的页面
		}
	}
		
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
